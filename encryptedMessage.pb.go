// Code generated by protoc-gen-go. DO NOT EDIT.
// source: encryptedMessage.proto

package goprocrypt

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EncryptedMessage struct {
	Signature            []byte     `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Digest               []byte     `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
	PublicKey            *PublicKey `protobuf:"bytes,5,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EncryptedMessage) Reset()         { *m = EncryptedMessage{} }
func (m *EncryptedMessage) String() string { return proto.CompactTextString(m) }
func (*EncryptedMessage) ProtoMessage()    {}
func (*EncryptedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc45adbfce800ef5, []int{0}
}

func (m *EncryptedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptedMessage.Unmarshal(m, b)
}
func (m *EncryptedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptedMessage.Marshal(b, m, deterministic)
}
func (m *EncryptedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptedMessage.Merge(m, src)
}
func (m *EncryptedMessage) XXX_Size() int {
	return xxx_messageInfo_EncryptedMessage.Size(m)
}
func (m *EncryptedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptedMessage proto.InternalMessageInfo

func (m *EncryptedMessage) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *EncryptedMessage) GetDigest() []byte {
	if m != nil {
		return m.Digest
	}
	return nil
}

func (m *EncryptedMessage) GetPublicKey() *PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type PublicKey struct {
	// Encoded in big-endian two's complement
	N                    []byte   `protobuf:"bytes,1,opt,name=n,proto3" json:"n,omitempty"`
	E                    int32    `protobuf:"varint,2,opt,name=e,proto3" json:"e,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc45adbfce800ef5, []int{1}
}

func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (m *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(m, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetN() []byte {
	if m != nil {
		return m.N
	}
	return nil
}

func (m *PublicKey) GetE() int32 {
	if m != nil {
		return m.E
	}
	return 0
}

func init() {
	proto.RegisterType((*EncryptedMessage)(nil), "goprocrypt.EncryptedMessage")
	proto.RegisterType((*PublicKey)(nil), "goprocrypt.PublicKey")
}

func init() { proto.RegisterFile("encryptedMessage.proto", fileDescriptor_dc45adbfce800ef5) }

var fileDescriptor_dc45adbfce800ef5 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4b, 0xcd, 0x4b, 0x2e,
	0xaa, 0x2c, 0x28, 0x49, 0x4d, 0xf1, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0xe2, 0x4a, 0xcf, 0x2f, 0x28, 0xca, 0x07, 0x4b, 0x29, 0xd5, 0x72, 0x09, 0xb8,
	0xa2, 0xa9, 0x12, 0x92, 0xe1, 0xe2, 0x2c, 0xce, 0x4c, 0xcf, 0x4b, 0x2c, 0x29, 0x2d, 0x4a, 0x95,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09, 0x42, 0x08, 0x08, 0x89, 0x71, 0xb1, 0xa5, 0x64, 0xa6, 0xa7,
	0x16, 0x97, 0x48, 0x30, 0x83, 0xa5, 0xa0, 0x3c, 0x21, 0x63, 0x2e, 0xce, 0x82, 0xd2, 0xa4, 0x9c,
	0xcc, 0x64, 0xef, 0xd4, 0x4a, 0x09, 0x56, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x51, 0x3d, 0x84, 0x4d,
	0x7a, 0x01, 0x30, 0xc9, 0x20, 0x84, 0x3a, 0x25, 0x75, 0x2e, 0x4e, 0xb8, 0xb8, 0x10, 0x0f, 0x17,
	0x63, 0x1e, 0xd4, 0x3e, 0xc6, 0x3c, 0x10, 0x2f, 0x55, 0x82, 0x49, 0x81, 0x51, 0x83, 0x35, 0x88,
	0x31, 0xd5, 0x89, 0x27, 0x0a, 0xc9, 0xd5, 0x49, 0x6c, 0x60, 0x8f, 0x18, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xe4, 0x30, 0xed, 0x19, 0xe2, 0x00, 0x00, 0x00,
}
